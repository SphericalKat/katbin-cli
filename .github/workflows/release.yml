name: Release to GHR
on:
  push:
    branches:
      - develop
      - main

jobs:
  build:
    name: ${{ matrix.job.target }} (${{ matrix.job.os }})
    strategy:
      fail-fast: false
      matrix:
        job:
          - {
              target: x86_64-unknown-linux-gnu,
              os: ubuntu-latest,
              use-cross: true,
            }
          - {
              target: x86_64-unknown-linux-musl,
              os: ubuntu-latest,
              use-cross: true,
            }
          - { target: x86_64-apple-darwin, os: macos-latest, use-cross: true }
          - { target: x86_64-pc-windows-gnu, os: windows-latest }
          - { target: x86_64-pc-windows-msvc, os: windows-latest }
    runs-on: ${{ matrix.job.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: recursive
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: rui314/setup-mold@v1
        if: runner.os == 'Linux'
        with:
          make-default: true

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: default
          toolchain: stable
          override: true

      - name: Cache cargo registry and build outputs
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/bin
            target
          key: ${{ matrix.job.target }}-cargo-stable-${{ hashFiles('Cargo.lock') }}

      - name: Build ${{ matrix.job.target }} binary
        uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ matrix.job.use-cross }}
          command: build
          args: --release --target=${{ matrix.job.target }}

      - name: Copy release build targets
        id: build
        shell: bash
        run: |
          mkdir dist

          EXE_suffix=""
          case ${{ matrix.job.target }} in
            *-pc-windows-*) EXE_suffix=".exe" ;;
          esac;

          BIN_NAME="katbin-${{ matrix.job.target }}${EXE_suffix}"

          mv target/${{ matrix.job.target }}/release/katbin${EXE_suffix} dist/${BIN_NAME}

          echo "BIN_PATH=dist/${BIN_NAME}" >> $GITHUB_OUTPUT

      - name: Upload ${{ matrix.job.target }} binary
        uses: actions/upload-artifact@v3
        with:
          name: katbin-${{ matrix.job.target }}
          path: ${{ steps.build.outputs.BIN_PATH }}

  publish:
    name: Publish Release
    needs: build
    runs-on: ubuntu-latest
    env:
      CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      ENVIRONMENT: ${{ github.ref }}
      GHR: true
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: recursive
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install dependencies
        run: npm install

      - name: Install cargo-edit
        uses: baptiste0928/cargo-install@v2
        with:
          crate: cargo-edit
          version: "0.11.6"

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Publish Release
        run: npx semantic-release
